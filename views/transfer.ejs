<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE-edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transfer</title>
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="font/bootstrap-icons.css" type="text/css">
    <script>
         document.addEventListener("DOMContentLoaded", () => {
            const depositForm = document.getElementById("depositForm");
            const withdrawForm = document.getElementById("withdrawForm");
            const transferForm = document.getElementById("transferForm");
            const backButton = document.getElementById("back-button");
            const formContainer = document.getElementById("form-container");
            const buttonContainer = document.getElementById("button-container");

            // Button options
            const depositOption = document.getElementById("depositButton");
            const withdrawOption = document.getElementById("withdrawButton");
            const transferOption = document.getElementById("transferButton");

            // Add event handlers for button clicks
            depositOption.onclick = () => showForm(depositForm);
            withdrawOption.onclick = () => showForm(withdrawForm);
            transferOption.onclick = () => showForm(transferForm);
            backButton.onclick = () => hideAllForms();

            function showForm(form) {
                hideAllForms();
                formContainer.style.display = "block";
                form.style.display = "block";
                buttonContainer.style.display = "none";
                backButton.style.display = "block";
            }

            function hideAllForms() {
                depositForm.style.display = "none";
                withdrawForm.style.display = "none";
                transferForm.style.display = "none";
                formContainer.style.display = "none";
                buttonContainer.style.display = "flex";
                backButton.style.display = "none";
            }

            // selected form
            const selectedForm = "<%- locals.selectedForm %>";

            // Show the selected form, if there is one
            if (selectedForm) {
                switch(selectedForm) {
                    case "deposit":
                        showForm(depositForm);
                        break;
                    case "withdraw":
                        showForm(withdrawForm);
                        break;
                    default:
                        showForm(transferForm);
                        break;
                }
            }
        });
    </script>
    <script>
        function handleFormSubmit(event) {
            // Get the amount to verify it is not negative
            const amount = document.querySelector("#form-container form[style*='display: block'] input[name='amount']") ? parseFloat(document.querySelector("#form-container form[style*='display: block'] input[name='amount']").value).toFixed(2) : 0.00;
            if (amount <= 0 || isNaN(amount)) {
                document.getElementById("message").innerHTML = "Please enter an amount greater than 0";
                document.querySelector("#form-container form[style*='display: block'] input[name='amount']").classList.add("border", "border-danger", "border-3");
                event.preventDefault();
            } else {
                document.querySelector("#form-container form[style*='display: block'] input[name='amount']").classList.remove("border", "border-danger", "border-3");
            }

            // Verify that all transfers have a valid memo
            const memo = document.querySelector("#form-container form[style*='display: block'] input[name='memo']") ? document.querySelector("#form-container form[style*='display: block'] input[name='memo']").value : "";
            if (memo == "") {
                document.getElementById("message").innerHTML = "Please enter a valid memo";
                document.querySelector("#form-container form[style*='display: block'] input[name='memo']").classList.add("border", "border-danger", "border-3");
                event.preventDefault();
            } else {
                document.querySelector("#form-container form[style*='display: block'] input[name='memo']").classList.remove("border", "border-danger", "border-3");
            }

            // Handle empty value if transaction type is transfer
            const transactionType = document.querySelector("#form-container form[style*='display: block'] input[name='transactionType']") ? document.querySelector("#form-container form[style*='display: block'] input[name='transactionType']").value : "";

            if (transactionType == "transfer") {
                // verify destination account is not negative and not empty
                const destinationAccountId = document.querySelector("#form-container form[style*='display: block'] input[name='destinationUserLoginId']").value;

                if (destinationAccountId == "" || parseInt(destinationAccountId) < 0) {
                    event.preventDefault();
                    document.querySelector("#form-container form[style*='display: block'] input[name='destinationUserLoginId']").classList.add("border", "border-danger", "border-3");
                    document.getElementById("message").innerHTML = "Please enter a valid destination account id";
                } else {
                    document.querySelector("#form-container form[style*='display: block'] input[name='destinationUserLoginId']").classList.remove("border", "border-danger", "border-3");
                }
            }
        }   
    </script>
</head>
<body>
    <nav class="navbar navbar-light bg-light px-3">
        <a class="navbar-brand text-primary fs-2" href="/">Express Bank</a>
        <div class="navbar-text d-flex flex-column text-end">
            <span>
                Welcome, <%- locals.userFirstName %>
            </span>
            <span>
                Login ID: <%- locals.userLoginId %>
            </span>
            <a href="/logout"><button class="btn btn-outline-secondary mt-1">Logout</button></a>
        </div>
    </nav>
    <div class="d-flex justify-content-between align-items-center">
        <h1 class="m-3">Transfer funds</h1>
        <% if (locals.targetUserLoginId > 0) { %>
            <span class="fs-4">Viewing Customer: <%- locals.targetUserLoginId %></span>
        <% } %>
        <div class="d-flex align-items-center p-3 gap-3">
            <a href="/profile"><button class="btn btn-outline-primary">View Profile</button></a>
            <% if (locals.userType == "employee") { %>
                <% if (locals.targetUserLoginId > 0) { %>
                    <a href="/remove-proxy"><button class="btn btn-outline-dark">End Proxy</button></a>
                <% } else { %>
                    <a href="/search"><button class="btn btn-outline-dark">Start Proxy</button></a>
                <% } %>
            <% } %>
        </div>
    </div>
    <div class="container-fluid px-0">
        <div class="d-flex justify-content-center gap-3 mt-1">
            <div class="row justify-content-center" id="button-container">
                <div class="col-md-4">
                    <div class="text-center shadow-lg bg-light p-3 rounded" style="width: 300px;">
                        <div class="d-flex flex-column gap-2">
                            <h5>Deposit</h5>
                            <i class="bi bi-plus" style="font-size: 50px;"></i>
                            <button class="btn btn-primary" id="depositButton">Select</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="text-center shadow-lg bg-light p-3 rounded" style="width: 300px;">
                        <div class="d-flex flex-column gap-2">
                            <h5>Withdraw</h5>
                            <i class="bi bi-dash" style="font-size: 50px;"></i>
                            <button class="btn btn-primary" id="withdrawButton">Select</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="text-center shadow-lg bg-light p-3 rounded" style="width: 300px;">
                        <div class="d-flex flex-column gap-2">
                            <h5>Transfer Between Accounts</h5>
                            <i class="bi bi-arrow-left-right" style="font-size: 50px;"></i>
                            <button class="btn btn-primary" id="transferButton">Select</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="rounded d-flex justify-content-center gap-5">
            <div id="form-container" class="p-3 shadow-lg bg-light justify-content-center" style="width: 500px; display: none;">
                <form id="depositForm" onsubmit="return handleFormSubmit(event);" style="display: none;" method="post">
                    <h2>Deposit</h2>
                    <input type="hidden" name="transactionType" value="deposit" />
                    <input type="hidden" name="sendingAccountType" value="<%- locals.selectedAccountType %>" />
                    <label for="amount" class="mt-3">Amount</label>
                    <input type="number" class="form-control" name="amount" min="0" step="0.01" placeholder="Enter amount" />
                    <label for="memo" class="mt-3">Memo</label>
                    <input type="text" class="form-control" name="memo" placeholder="Enter memo" value="Deposit"/>
                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>
                <form id="withdrawForm" onsubmit="return handleFormSubmit(event);" style="display: none;" method="post">
                    <h2>Withdraw</h2>
                    <input type="hidden" name="transactionType" value="withdraw" />
                    <input type="hidden" name="sendingAccountType" value="<%- locals.selectedAccountType %>" />
                    <label for="amount" class="mt-3">Amount</label>
                    <input type="number" class="form-control" name="amount" min="0" step="0.01" placeholder="Enter amount" />
                    <label for="memo" class="mt-3">Memo</label>
                    <input type="text" class="form-control" name="memo" placeholder="Enter memo" value="Withdraw"/>
                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>
                <form id="transferForm" onsubmit="return handleFormSubmit(event);" style="display: none;" method="post">
                    <h2>Transfer</h2>
                    <input type="hidden" name="transactionType" value="transfer" />
                    <input type="hidden" name="sendingAccountType" value="<%- locals.selectedAccountType %>" />
                    <label for="destinationUserLoginId">User Account Number</label>
                    <input type="number" id="destinationUserLoginId" name="destinationUserLoginId" class="form-control" autofocus="autofocus" placeholder="Enter account number">
                    <label for="destinationAccountType" class="mt-3">Account Type</label>
                    <select name="destinationAccountType" id="destinationAccountType" class="form-select" required>
                        <option value="checking" selected>Checking</option>
                        <option value="savings">Savings</option>
                    </select>
                    <label for="amount" class="mt-3">Amount</label>
                    <input type="number" class="form-control" name="amount" min="0" step="0.01" placeholder="Enter amount" />
                    <label for="memo" class="mt-3">Memo</label>
                    <input type="text" class="form-control" name="memo" placeholder="Enter memo"/>
                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>
                <p id="message" class="text-danger mt-3 text-center">
                    <%- locals.message %>
                </p>
                <p id="success_message" class="text-success mt-3 text-center">
                    <%- locals.success_message %>
                </p>
                <div class="d-flex justify-content-center">
                    <button id="back-button" style="display: none;" class="btn btn-outline-secondary">Back</button>
                </div>
            </div>
        </div>
    </div>
    <div class="rounded d-flex justify-content-center mt-4">
        <a href="/dashboard"><button type="button" class="btn btn-outline-primary">Back to dashboard</button></a>
    </div>
</body>
</html>